function [c]=train_and_test(train_data,test_data,t_train,t_test)

rng('default')

hiddenSize1 = 100;
autoenc1 = trainAutoencoder(train_data,hiddenSize1, ...
    'MaxEpochs',400, ...
    'L2WeightRegularization',0.004, ...
    'SparsityRegularization',4, ...
    'SparsityProportion',0.15, ...
    'ScaleData', false);
feat1 = encode(autoenc1,train_data);

hiddenSize2 = 50;
autoenc2 = trainAutoencoder(feat1,hiddenSize2, ...
    'MaxEpochs',100, ...
    'L2WeightRegularization',0.002, ...
    'SparsityRegularization',4, ...
    'SparsityProportion',0.1, ...
    'ScaleData', false);
feat2 = encode(autoenc2,feat1);

softnet = trainSoftmaxLayer(feat2,t_train,'MaxEpochs',400);

deepnet = stack(autoenc1,autoenc2,softnet);

deepnet = train(deepnet,train_data,t_train);

y = deepnet(test_data);

[c,~,~,~] = confusion(t_test,y);
